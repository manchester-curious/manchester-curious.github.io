#!/usr/bin/env bash
set -e # halt script on error

# Adapted from https://gist.github.com/domenic/ec8b0fc8ab45f39403dd

SOURCE_BRANCH="gh-pages"
TARGET_BRANCH="master"
TARGET_REPO=git@github.com:manchester-curious/manchester-curious.github.io.git

function doBuild {
    echo "Running build"
    bundle exec jekyll build
    #bundle exec htmlproofer ./_site --disable-external
}

# Pull requests and commits to other branches shouldn't try to deploy, just build to verify
if [ "$TRAVIS_PULL_REQUEST" != "false" -o "$TRAVIS_BRANCH" != "$SOURCE_BRANCH" ]; then
    echo "Skipping deploy, just running a build."
    doBuild
    exit 0
fi

echo "Saving some useful git context"
REPO=`git config remote.origin.url`
SHA=`git rev-parse --verify HEAD`

doBuild

# Get the deploy key by using Travis's stored variables to decrypt deploy_key.enc
ENCRYPTED_KEY_VAR="encrypted_${ENCRYPTION_LABEL}_key"
ENCRYPTED_IV_VAR="encrypted_${ENCRYPTION_LABEL}_iv"
ENCRYPTED_KEY=${!ENCRYPTED_KEY_VAR}
ENCRYPTED_IV=${!ENCRYPTED_IV_VAR}
echo "Decrypting deploy_key.enc"
openssl aes-256-cbc -K $ENCRYPTED_KEY -iv $ENCRYPTED_IV -in deploy_key.enc -out deploy_key -d
chmod 600 deploy_key

echo "Starting ssh agent"
eval `ssh-agent -s`
ssh-add deploy_key

echo "Setting git user name and commit email"
git config --global user.name "Travis CI"
git config --global user.email "$COMMIT_AUTHOR_EMAIL"

echo "Cloning the target repository"
git clone $TARGET_REPO out
cd out
echo "Checking out the target branch: ${TARGET_BRANCH}"
git checkout $TARGET_BRANCH || git checkout --orphan $TARGET_BRANCH

echo "Pulling in the changes from the source: ${REPO} ${SOURCE_BRANCH}"
git fetch $REPO $SOURCE_BRANCH
git merge --no-edit $SHA

echo "Now that we're all set up, we can push."
git push $TARGET_REPO $TARGET_BRANCH